// Mocks generated by Mockito 5.3.2 from annotations
// in arq_limpa/aplicacao/test/certificado_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:arq_limpa/domain/dto/certificado_dto.dart' as _i3;
import 'package:arq_limpa/domain/interfaces/dao/i_certificado_dao.dart' as _i2;
import 'package:arq_limpa/infraestrutura/test/certificado_service_test.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeICertificadoDao_0 extends _i1.SmartFake
    implements _i2.ICertificadoDao {
  _FakeICertificadoDao_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCertificadoDto_1 extends _i1.SmartFake
    implements _i3.CertificadoDto {
  _FakeCertificadoDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CertificadoServiceTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockCertificadoServiceTest extends _i1.Mock
    implements _i4.CertificadoServiceTest {
  MockCertificadoServiceTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ICertificadoDao get certificadoDao => (super.noSuchMethod(
        Invocation.getter(#certificadoDao),
        returnValue: _FakeICertificadoDao_0(
          this,
          Invocation.getter(#certificadoDao),
        ),
      ) as _i2.ICertificadoDao);
  @override
  set certificadoDao(_i2.ICertificadoDao? _certificadoDao) =>
      super.noSuchMethod(
        Invocation.setter(
          #certificadoDao,
          _certificadoDao,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<dynamic> deleteById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteById,
          [id],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<List<_i3.CertificadoDto>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue:
            _i5.Future<List<_i3.CertificadoDto>>.value(<_i3.CertificadoDto>[]),
      ) as _i5.Future<List<_i3.CertificadoDto>>);
  @override
  _i5.Future<_i3.CertificadoDto> getById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i5.Future<_i3.CertificadoDto>.value(_FakeCertificadoDto_1(
          this,
          Invocation.method(
            #getById,
            [id],
          ),
        )),
      ) as _i5.Future<_i3.CertificadoDto>);
  @override
  _i5.Future<dynamic> insert(_i3.CertificadoCriarDto? object) =>
      (super.noSuchMethod(
        Invocation.method(
          #insert,
          [object],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> update(_i3.CertificadoAtualizarDto? object) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [object],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
  @override
  _i5.Future<dynamic> updateSomeFields(Map<String, dynamic>? updated) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSomeFields,
          [updated],
        ),
        returnValue: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);
}
